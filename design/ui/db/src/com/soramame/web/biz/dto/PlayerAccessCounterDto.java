package com.soramame.web.biz.dto;

import java.io.Serializable;
import java.util.Date;

/**
 * player_access_counter モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class PlayerAccessCounterDto implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** player_base. */
	private PlayerBaseDto playerBase;

	/** player_access_count. */
	private Integer playerAccessCount;

	/** access_date. */
	private Date accessDate;

	/**
	 * コンストラクタ.
	 */
	public PlayerAccessCounterDto() {
	}

	/**
	 * player_base を設定します.
	 * 
	 * @param playerBase
	 *            player_base
	 */
	public void setPlayerBase(PlayerBaseDto playerBase) {
		this.playerBase = playerBase;
	}

	/**
	 * player_base を取得します.
	 * 
	 * @return player_base
	 */
	public PlayerBaseDto getPlayerBase() {
		return this.playerBase;
	}

	/**
	 * player_access_count を設定します.
	 * 
	 * @param playerAccessCount
	 *            player_access_count
	 */
	public void setPlayerAccessCount(Integer playerAccessCount) {
		this.playerAccessCount = playerAccessCount;
	}

	/**
	 * player_access_count を取得します.
	 * 
	 * @return player_access_count
	 */
	public Integer getPlayerAccessCount() {
		return this.playerAccessCount;
	}

	/**
	 * access_date を設定します.
	 * 
	 * @param accessDate
	 *            access_date
	 */
	public void setAccessDate(Date accessDate) {
		this.accessDate = accessDate;
	}

	/**
	 * access_date を取得します.
	 * 
	 * @return access_date
	 */
	public Date getAccessDate() {
		return this.accessDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((playerBase == null) ? 0 : playerBase.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		PlayerAccessCounterDto other = (PlayerAccessCounterDto) obj;
		if (playerBase == null) {
			if (other.playerBase != null) {
				return false;
			}
		} else if (!playerBase.equals(other.playerBase)) {
			return false;
		}
		return true;
	}

}
