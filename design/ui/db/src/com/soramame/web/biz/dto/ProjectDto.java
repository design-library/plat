package com.soramame.web.biz.dto;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * project モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class ProjectDto implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** project_id. */
	private String projectId;

	/** manager_base. */
	private ManagerBaseDto managerBase;

	/** title. */
	private String title;

	/** recruitment_area_code. */
	private String recruitmentAreaCode;

	/** over_view. */
	private String overView;

	/** register_name. */
	private String registerName;

	/** register_date. */
	private Date registerDate;

	/** update_name. */
	private String updateName;

	/** update_date. */
	private Date updateDate;

	/** project_access_counter 一覧. */
	private Set<ProjectAccessCounterDto> projectAccessCounterSet;

	/** participation_hope_counter 一覧. */
	private Set<ParticipationHopeCounterDto> participationHopeCounterSet;

	/**
	 * コンストラクタ.
	 */
	public ProjectDto() {
		this.participationHopeCounterSet = new HashSet<ParticipationHopeCounterDto>();
		this.projectAccessCounterSet = new HashSet<ProjectAccessCounterDto>();
	}

	/**
	 * project_id を設定します.
	 * 
	 * @param projectId
	 *            project_id
	 */
	public void setProjectId(String projectId) {
		this.projectId = projectId;
	}

	/**
	 * project_id を取得します.
	 * 
	 * @return project_id
	 */
	public String getProjectId() {
		return this.projectId;
	}

	/**
	 * manager_base を設定します.
	 * 
	 * @param managerBase
	 *            manager_base
	 */
	public void setManagerBase(ManagerBaseDto managerBase) {
		this.managerBase = managerBase;
	}

	/**
	 * manager_base を取得します.
	 * 
	 * @return manager_base
	 */
	public ManagerBaseDto getManagerBase() {
		return this.managerBase;
	}

	/**
	 * title を設定します.
	 * 
	 * @param title
	 *            title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * title を取得します.
	 * 
	 * @return title
	 */
	public String getTitle() {
		return this.title;
	}

	/**
	 * recruitment_area_code を設定します.
	 * 
	 * @param recruitmentAreaCode
	 *            recruitment_area_code
	 */
	public void setRecruitmentAreaCode(String recruitmentAreaCode) {
		this.recruitmentAreaCode = recruitmentAreaCode;
	}

	/**
	 * recruitment_area_code を取得します.
	 * 
	 * @return recruitment_area_code
	 */
	public String getRecruitmentAreaCode() {
		return this.recruitmentAreaCode;
	}

	/**
	 * over_view を設定します.
	 * 
	 * @param overView
	 *            over_view
	 */
	public void setOverView(String overView) {
		this.overView = overView;
	}

	/**
	 * over_view を取得します.
	 * 
	 * @return over_view
	 */
	public String getOverView() {
		return this.overView;
	}

	/**
	 * register_name を設定します.
	 * 
	 * @param registerName
	 *            register_name
	 */
	public void setRegisterName(String registerName) {
		this.registerName = registerName;
	}

	/**
	 * register_name を取得します.
	 * 
	 * @return register_name
	 */
	public String getRegisterName() {
		return this.registerName;
	}

	/**
	 * register_date を設定します.
	 * 
	 * @param registerDate
	 *            register_date
	 */
	public void setRegisterDate(Date registerDate) {
		this.registerDate = registerDate;
	}

	/**
	 * register_date を取得します.
	 * 
	 * @return register_date
	 */
	public Date getRegisterDate() {
		return this.registerDate;
	}

	/**
	 * update_name を設定します.
	 * 
	 * @param updateName
	 *            update_name
	 */
	public void setUpdateName(String updateName) {
		this.updateName = updateName;
	}

	/**
	 * update_name を取得します.
	 * 
	 * @return update_name
	 */
	public String getUpdateName() {
		return this.updateName;
	}

	/**
	 * update_date を設定します.
	 * 
	 * @param updateDate
	 *            update_date
	 */
	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	/**
	 * update_date を取得します.
	 * 
	 * @return update_date
	 */
	public Date getUpdateDate() {
		return this.updateDate;
	}

	/**
	 * project_access_counter 一覧を設定します.
	 * 
	 * @param projectAccessCounterSet
	 *            project_access_counter 一覧
	 */
	public void setProjectAccessCounterSet(Set<ProjectAccessCounterDto> projectAccessCounterSet) {
		this.projectAccessCounterSet = projectAccessCounterSet;
	}

	/**
	 * project_access_counter を追加します.
	 * 
	 * @param projectAccessCounter
	 *            project_access_counter
	 */
	public void addProjectAccessCounter(ProjectAccessCounterDto projectAccessCounter) {
		this.projectAccessCounterSet.add(projectAccessCounter);
	}

	/**
	 * project_access_counter 一覧を取得します.
	 * 
	 * @return project_access_counter 一覧
	 */
	public Set<ProjectAccessCounterDto> getProjectAccessCounterSet() {
		return this.projectAccessCounterSet;
	}

	/**
	 * participation_hope_counter 一覧を設定します.
	 * 
	 * @param participationHopeCounterSet
	 *            participation_hope_counter 一覧
	 */
	public void setParticipationHopeCounterSet(Set<ParticipationHopeCounterDto> participationHopeCounterSet) {
		this.participationHopeCounterSet = participationHopeCounterSet;
	}

	/**
	 * participation_hope_counter を追加します.
	 * 
	 * @param participationHopeCounter
	 *            participation_hope_counter
	 */
	public void addParticipationHopeCounter(ParticipationHopeCounterDto participationHopeCounter) {
		this.participationHopeCounterSet.add(participationHopeCounter);
	}

	/**
	 * participation_hope_counter 一覧を取得します.
	 * 
	 * @return participation_hope_counter 一覧
	 */
	public Set<ParticipationHopeCounterDto> getParticipationHopeCounterSet() {
		return this.participationHopeCounterSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((projectId == null) ? 0 : projectId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ProjectDto other = (ProjectDto) obj;
		if (projectId == null) {
			if (other.projectId != null) {
				return false;
			}
		} else if (!projectId.equals(other.projectId)) {
			return false;
		}
		return true;
	}

}
